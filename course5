#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <conio.h>


struct Transaction
{
	char uesrname[100];
	time_t timestamp;
	int type;
	int amount;
	struct Transaction * next;
};
typedef struct Transaction Transaction;

struct Account
{
	char name[100];//姓名
	char idCard[19];//身份证号
	char tel[12];//电话
	char uesrname[100];//账户
	char password[7];//密码
	float money;//金额
	struct Account *next;
};
typedef struct Account Account;

Account * head=NULL;
Account * tail=NULL;
Account * curAccount=NULL;//记录当期账户

void saveMoney();
void ThesaveMoney();
void drawMoney();
void ThedrawMoney();
void transfer();
void Thetransfer();
void updatePassword();
void TheupdatePassword();
void exitsystem();
void Thexitsystem();



void Load() //加载数据
{
	FILE* fp=fopen("D:/atm.txt","r");
	if(fp!=NULL)
	{
		while(!feof(fp))
		{
			//创建结点
			Account * newNode=(Account *)malloc(sizeof(Account));
			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s %s %s %s %f\n",newNode->name,newNode->idCard,newNode->tel,newNode->uesrname,newNode->password,&newNode->money);
			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		printf("加载成功!\n");
		fclose(fp);
	}
}

void printLinkedList()
{
	Account * curP=head;
	while(curP!=NULL)
	{
		curP=curP->next;
	}
}

void saveData()
{
	FILE* fp=fopen("D:/atm.txt","w");
	if(fp!=NULL)
	{
		Account * curP=head;
		while(curP!=NULL)
		{
			fprintf(fp,"%s %s %s %s %s %f\n",curP->name,curP->idCard,curP->tel,curP->uesrname,curP->password,curP->money);
			curP=curP->next;
		}
	}
	fclose(fp);
}

void  function()
{
	    int a;//选择功能的变量
	    char ch;
		do
		{
		   	printf("\n\n按ENTER键进入、返回主菜单 \n");
		   	fflush(stdin);
		   	scanf("%c",&ch);
		   	system("cls");//清屏
			  printf("\n#################################################################################\n");
		    printf("\n▓                               * 欢迎使用  *                                 ▓\n");
		    printf("\n#################################################################################\n");
			  printf("\n          ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆\n");	
			  printf("          |◆|******|◆|        ☆ 存款业务       请按 1        |◆|******|◆|\n"); 
			  printf("          |◆|******|◆|        ☆ 取款业务       请按 2        |◆|******|◆|\n");
			  printf("          |◆|******|◆|        ☆ 转账业务       请按 3        |◆|******|◆|\n"); 
			  printf("          |◆|******|◆|        ☆ 修改密码       请按 4        |◆|******|◆|\n");
			  printf("          |◆|******|◆|        ☆ 退出系统       请按 5        |◆|******|◆|\n");
			  printf("          ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆\n");
		    printf("\n#################################################################################\n");
		    printf("\n▓                          *******************************                    ▓\n");
		    printf("\n#################################################################################\n");
			  printf("\n\n\t\t##请输入你的选择：\n");
			  fflush(stdin);
			  scanf("%d",&a);
			switch(a)
			{//注册
				case 1: 
				{ 
					system("cls");fflush(stdin);saveMoney();break;//存款
				} 
				case 2:  
				{
					system("cls");fflush(stdin);drawMoney();break;//取款
				}
				case 3:
				{
					system("cls");fflush(stdin);transfer();break;//转账 
				}
				case 4: 
				{
					system("cls");fflush(stdin);updatePassword();break;//密码修改
				}
				case 5: 
				{
					 exit(0);
				}
				default:printf("您输入的选择有误，请输入正确的选项：\n");                               	         
			}		

		} while(1);
} 

void  Thefunction()
{
	    int a;//选择功能的变量
	    char ch;
		do
		{
		   	printf("\n\npress enter to enter or return to the menu \n");
		   	fflush(stdin);
		   	scanf("%c",&ch);
		   	system("cls");//清屏
			printf("\n#################################################################################\n");
		    printf("\n▓                           * welcome to Blossoming wealth bank  *                                 ▓\n");
		    printf("\n#################################################################################\n");
			printf("\n          ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆\n");	
			printf("          |◆|******|◆|        ☆ save money       please press 1        |◆|******|◆|\n"); 
			printf("          |◆|******|◆|        ☆ draw money       please press 2        |◆|******|◆|\n");
			printf("          |◆|******|◆|        ☆ transfer money   please press 3        |◆|******|◆|\n"); 
			printf("          |◆|******|◆|        ☆ update password  please press 4        |◆|******|◆|\n");
			printf("          |◆|******|◆|        ☆ exit system      please press 5        |◆|******|◆|\n");
			printf("          ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆\n");
		    printf("\n#################################################################################\n");
		    printf("\n▓                              *******************************                    ▓\n");
		    printf("\n#################################################################################\n");
			printf("\n\n\t\t##请输入你的选择：\n");
			fflush(stdin);
			scanf("%d",&a);
			switch(a)
			{//注册
				case 1: 
				{ 
					system("cls");fflush(stdin);ThesaveMoney();break;//存款
				} 
				case 2:  
				{
					system("cls");fflush(stdin);ThedrawMoney();break;//取款
				}
				case 3:
				{
					system("cls");fflush(stdin);Thetransfer();break;//转账 
				}
				case 4: 
				{
					system("cls");fflush(stdin);TheupdatePassword();break;//密码修改
				}
				case 5: 
				{
					 exit(0);
				}
				default:printf("the number you entered is wrong!\n");                               	         
			}		

		} while(1);
}

//找到返回1，否则返回0
int findAccount(Account a)
{
	Account * curp=head;
	while(curp!=NULL)
	{
		if((strcmp(curp->uesrname,a.uesrname)==0)&&(strcmp(curp->password,a.password)==0))
		{
			curAccount=curp;
			return 1;
		}
		curp=curp->next;
	}
	return 0;
}

Account * otherAccount=NULL;//记录对方账户
int findotherAccount(char otherUsername[])
{
	Account * curP=head;
	while(curP!=NULL)
	{
		if((strcmp(curP->uesrname,otherUsername)==0))
		{
			otherAccount=curP;
			return 1;
		}
		curP=curP->next;
	}
	return 0;
}


void updatePassword()
{
	char formerPassword[100];
	printf("请输入旧密码：\n");
	scanf("%s",formerPassword);
	if(strcmp(formerPassword,curAccount->password)==0)
	{
		printf("请输入新密码：\n");
		scanf("%s",curAccount->password);
		printf("修改成功！\n");
		saveData();
	}
	else
	{
		printf("密码错误！不能修改！\n");
	}

}

void TheupdatePassword()
{
	char formerPassword[100];
	printf("please enter  your fomer password：");
	scanf("%s",formerPassword);
	if(strcmp(formerPassword,curAccount->password)==0)
	{
		printf("please enter your new password：");
		scanf("%s",curAccount->password);
		printf("Changed successfully！\n");
		saveData();
	}
	else
	{
		printf("The former password is wrong ,you can't change it！\n");
	}
	
	Thefunction();
}

void saveMoney()
{
	int a;
	while (1)
	{
	    printf("请输入您的存款金额(整百)：\n");
        scanf("%d", &a);
	    if (a < 0 || a % 100 != 0)
	        printf("输入有误，请重新输入！\n");
	    else
	        break;
	}
	getchar();
	curAccount->money+=a;
	saveData();
	printf("存款成功\n");
}

void ThesaveMoney()
{
	int a;
	while (1)
	{
	    printf("Please enter your deposit amount(in hundreds)：\n");
        scanf("%d", &a);
	    if (a < 0 || a % 100 != 0)
	        printf("Error in input,please re-enter！\n");
	    else
	        break;
	}
	getchar();
	curAccount->money+=a;
	saveData();
	printf("save money successfully\n");
}

void drawMoney()
{
	printf("请输入取款金额:\n");
	int money;
	scanf("%d",&money);
	if(money<=curAccount->money)
	{
		printf("取款成功！\n");
		curAccount->money-=money;
		saveData();
		//记录交易信息
	}
	else
	{
		printf("余额不足，取款失败\n");
	}
}

void ThedrawMoney()
{
	printf("please enter the withdrawal amount:\n");
	int money;
	scanf("%d",&money);
	if(money<=curAccount->money)
	{
		printf("Withdrawal succeeded！\n");
		curAccount->money-=money;
		saveData();
		//记录交易信息
	}
	else
	{
		printf("Insufficient balance,withdrawal failed\n");
	}
}

void transfer()
{
	printf("请输入所需转账的账户：");
	char otherUsername[100];
	scanf("%s",otherUsername);
	//判断账户合法性
	if(findotherAccount(otherUsername))
	{
		printf("请输入转账金额：");
		int money;
		scanf("%d",&money);

	    //验证金额的合法性
		if(curAccount->money>=money)
		{
			curAccount->money-=money;
			otherAccount->money+=money;
			printf("转账成功！\n");
			saveData();
		}
		else
		{
			printf("余额不足！\n");
		}
	}
	else
	{
		printf("请输入正确的账号!\n");
	}
}

void Thetransfer()
{
	printf("please enter the other username you need to transfer money：\n");
	char otherUsername[100];
	scanf("%s",otherUsername);
	//判断账户合法性
	if(findotherAccount(otherUsername))
	{
		printf("please enter the number of money you need to transfer：\n");
		int money;
		scanf("%d",&money);

	    //验证金额的合法性
		if(curAccount->money>=money)
		{
			curAccount->money-=money;
			otherAccount->money+=money;
			printf("Transfer successed!\n");
			saveData();
		}
		else
		{
			printf("your money is not enough!\n");
		}
	}
	else
	{
		printf("please enter a right username!\n");
		
	}
	Thefunction();
}

int loadData()
{
	FILE* fp=fopen("D:/atm.txt","r");
	if(fp==NULL)
	{
		return 0;
	}
	else
	{
		while(!feof(fp))
		{
			//创建结点
			Account * newNode=(Account *)malloc(sizeof(Account));
			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s %s %s %s %f\n",newNode->name,newNode->idCard,newNode->tel,newNode->uesrname,newNode->password,&newNode->money);
			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		return 1;
	}
	fclose(fp);
}

void signUp()
{
	//申请一块堆内存空间，将其地址赋值给指针newNodeP
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	printf("请输入姓名:\n");
	scanf("%s",newNodeP->name);

	printf("请输入身份证号:\n");
	scanf("%s",newNodeP->idCard);

	printf("请输入电话:\n");
	scanf("%s",newNodeP->tel);

	printf("请输入账号:\n");
	scanf("%s",newNodeP->uesrname);

	printf("请输入密码:\n");
	scanf("%s",newNodeP->password);

	newNodeP->money=0.0f;
	newNodeP->next=NULL;

	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	}
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}
	printf("创建账户成功!\n");
	saveData();
	function();
}

void signtheUp()
{
    //申请一块堆内存空间，将其地址赋值给指针newNodeP
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	printf("please input your name:\n");
	scanf("%s",newNodeP->name);

	printf("please input your idCard:\n");
	scanf("%s",newNodeP->idCard);

	printf("please input your telphone:\n");
	scanf("%s",newNodeP->tel);

	printf("please input your username:\n");
	scanf("%s",newNodeP->uesrname);

	printf("please input your password:\n");
	scanf("%s",newNodeP->password);

	newNodeP->money=0.0f;
	newNodeP->next=NULL;

	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	}
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}
	printf("Created Successfully !\n");
	saveData();
	Thefunction();
}

void signIn()
{
	int i;
	for(i=0;i<3;i++)
	{
		Account a;
		printf("请输入账号:");
		scanf("%s",a.uesrname);

		printf("请输入密码:");
		scanf("%s",a.password);

		if(findAccount(a)==1)
		{
			printf("登陆成功！\n");
			break;
		}
		else
		{
			printf("登录失败！\n");
		}
	}
	function();
}

void signtheIn()
{
	int i;
	for(i=0;i<3;i++)
	{
		Account a;
		printf("please input your account:");
		scanf("%s",a.uesrname);

		printf("please input your password:");
		scanf("%s",a.password);

		if(findAccount(a)==1)
		{
			printf("Login successful!\n");
			break;
		}
		else
		{
			printf("Login failed!\n");
		}
	}
	Thefunction();
}

void showMenu()
{
	printf("开户，按1\n");
	printf("登录，按2\n");
}

void showtheMenu()
{
	printf("open an account,please press 1\n");
	printf("signup，please press 2\n");
}

int main()
{
	printf("欢迎使用花开富贵银行\n");
	printf("welcome to Blossoming wealth bank\n");
	Load();
	int language;

	printf("中文，请按1\n");
	printf("English,please press 2\n");
	scanf("%d",&language);
	switch(language)
	{
		case 1:
			{
				showMenu();
				int n;
				do
				{
					scanf("%d",&n);
					switch(n)
					{
						case 1:
							signUp();
							break;
						case 2:
							signIn();
							function();
							break;
						case 3:
							exit(0);
							break;
						default:printf("您输入的数据不符合要求!");	
					}			
				}while(1);
			}
		case 2:
			{
				showtheMenu();
				int n;
				do
				{
					scanf("%d",&n);
					switch(n)
	                {					
						case 1:
							signtheUp();
							break;
						case 2:
							signtheIn();
							fflush(stdin);
							Thefunction();
							break;
						case 3:
							exit(0);
							break;
						default:printf("The number you entered is not allowed!");	
					}						
				}while(1);
			}
		default:printf("您输入的数据不符合要求!");
		printf("The number you entered is not allowed!");		
	}

	int i=loadData();
	if(i==0)
	{
		printf("加载失败！\n");
	}
	else
	{
		printf("加载成功！\n");
	}

	printLinkedList();
	
	time_t timestamp = time(NULL);
	
	char *ct=ctime(&timestamp);
	printf("%s\n",ct);


	return 0;
}
